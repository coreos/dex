// Code generated by protoc-gen-go. DO NOT EDIT.
// source: server/internal/types.proto

/*
Package internal is a generated protocol buffer package.

Package internal holds protobuf types used by the server

It is generated from these files:
	server/internal/types.proto

It has these top-level messages:
	RefreshToken
	IDTokenSubject
	AccessToken
*/
package internal

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// RefreshToken is a message that holds refresh token data used by dex.
type RefreshToken struct {
	RefreshId string `protobuf:"bytes,1,opt,name=refresh_id,json=refreshId" json:"refresh_id,omitempty"`
	Token     string `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
}

func (m *RefreshToken) Reset()                    { *m = RefreshToken{} }
func (m *RefreshToken) String() string            { return proto.CompactTextString(m) }
func (*RefreshToken) ProtoMessage()               {}
func (*RefreshToken) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *RefreshToken) GetRefreshId() string {
	if m != nil {
		return m.RefreshId
	}
	return ""
}

func (m *RefreshToken) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

// IDTokenSubject represents both the userID and connID which is returned
// as the "sub" claim in the ID Token.
type IDTokenSubject struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	ConnId string `protobuf:"bytes,2,opt,name=conn_id,json=connId" json:"conn_id,omitempty"`
}

func (m *IDTokenSubject) Reset()                    { *m = IDTokenSubject{} }
func (m *IDTokenSubject) String() string            { return proto.CompactTextString(m) }
func (*IDTokenSubject) ProtoMessage()               {}
func (*IDTokenSubject) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *IDTokenSubject) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *IDTokenSubject) GetConnId() string {
	if m != nil {
		return m.ConnId
	}
	return ""
}

// AccessToken used in the /userinfo endpoint implementation
type AccessToken struct {
	Subject       string   `protobuf:"bytes,1,opt,name=subject" json:"subject,omitempty"`
	Username      string   `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	Email         string   `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
	EmailVerified bool     `protobuf:"varint,4,opt,name=email_verified,json=emailVerified" json:"email_verified,omitempty"`
	Groups        []string `protobuf:"bytes,5,rep,name=groups" json:"groups,omitempty"`
	ConnectorData string   `protobuf:"bytes,6,opt,name=connector_data,json=connectorData" json:"connector_data,omitempty"`
	ConnectorId   string   `protobuf:"bytes,7,opt,name=connector_id,json=connectorId" json:"connector_id,omitempty"`
	// Time at which the access token expires, represented as a unix time.
	//
	// This is the same value as the id_token.
	Expiry int64 `protobuf:"varint,8,opt,name=expiry" json:"expiry,omitempty"`
}

func (m *AccessToken) Reset()                    { *m = AccessToken{} }
func (m *AccessToken) String() string            { return proto.CompactTextString(m) }
func (*AccessToken) ProtoMessage()               {}
func (*AccessToken) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *AccessToken) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *AccessToken) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *AccessToken) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *AccessToken) GetEmailVerified() bool {
	if m != nil {
		return m.EmailVerified
	}
	return false
}

func (m *AccessToken) GetGroups() []string {
	if m != nil {
		return m.Groups
	}
	return nil
}

func (m *AccessToken) GetConnectorData() string {
	if m != nil {
		return m.ConnectorData
	}
	return ""
}

func (m *AccessToken) GetConnectorId() string {
	if m != nil {
		return m.ConnectorId
	}
	return ""
}

func (m *AccessToken) GetExpiry() int64 {
	if m != nil {
		return m.Expiry
	}
	return 0
}

func init() {
	proto.RegisterType((*RefreshToken)(nil), "internal.RefreshToken")
	proto.RegisterType((*IDTokenSubject)(nil), "internal.IDTokenSubject")
	proto.RegisterType((*AccessToken)(nil), "internal.AccessToken")
}

func init() { proto.RegisterFile("server/internal/types.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 289 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x91, 0xcd, 0x4e, 0xeb, 0x30,
	0x10, 0x85, 0x95, 0x9b, 0xdb, 0x24, 0x9d, 0xfe, 0x2c, 0x2c, 0x04, 0x16, 0x08, 0x29, 0x44, 0x42,
	0xca, 0x8a, 0x2e, 0x78, 0x02, 0xa0, 0x9b, 0x6c, 0x03, 0x62, 0x1b, 0xb9, 0xf1, 0x14, 0x0c, 0xad,
	0x1d, 0xd9, 0x4e, 0x45, 0x5f, 0x9d, 0x15, 0xb2, 0x9d, 0xa6, 0xbb, 0x7c, 0x67, 0x66, 0xbe, 0x1c,
	0xc9, 0x70, 0x63, 0x50, 0x1f, 0x50, 0xaf, 0x84, 0xb4, 0xa8, 0x25, 0xdb, 0xad, 0xec, 0xb1, 0x43,
	0xf3, 0xd0, 0x69, 0x65, 0x15, 0xc9, 0x4e, 0x69, 0xf1, 0x02, 0xf3, 0x1a, 0xb7, 0x1a, 0xcd, 0xe7,
	0x9b, 0xfa, 0x46, 0x49, 0x6e, 0x01, 0x74, 0xe0, 0x46, 0x70, 0x1a, 0xe5, 0x51, 0x39, 0xad, 0xa7,
	0x43, 0x52, 0x71, 0x72, 0x01, 0x13, 0xeb, 0xf6, 0xe8, 0x3f, 0x3f, 0x09, 0x50, 0x3c, 0xc3, 0xb2,
	0x5a, 0xfb, 0xfb, 0xd7, 0x7e, 0xf3, 0x85, 0xad, 0x25, 0x57, 0x90, 0xf6, 0x06, 0xf5, 0xd9, 0x91,
	0x38, 0xac, 0xb8, 0x1b, 0xb4, 0x4a, 0x4a, 0x37, 0x08, 0x8a, 0xc4, 0x61, 0xc5, 0x8b, 0xdf, 0x08,
	0x66, 0x4f, 0x6d, 0x8b, 0xc6, 0x84, 0x22, 0x14, 0x52, 0x13, 0x64, 0x83, 0xe1, 0x84, 0xe4, 0x1a,
	0x32, 0x27, 0x93, 0x6c, 0x8f, 0x83, 0x63, 0x64, 0xd7, 0x0f, 0xf7, 0x4c, 0xec, 0x68, 0x1c, 0xfa,
	0x79, 0x20, 0xf7, 0xb0, 0xf4, 0x1f, 0xcd, 0x01, 0xb5, 0xd8, 0x0a, 0xe4, 0xf4, 0x7f, 0x1e, 0x95,
	0x59, 0xbd, 0xf0, 0xe9, 0xfb, 0x10, 0x92, 0x4b, 0x48, 0x3e, 0xb4, 0xea, 0x3b, 0x43, 0x27, 0x79,
	0xec, 0xaa, 0x05, 0x72, 0xe7, 0xae, 0x24, 0xb6, 0x56, 0xe9, 0x86, 0x33, 0xcb, 0x68, 0xe2, 0xed,
	0x8b, 0x31, 0x5d, 0x33, 0xcb, 0xc8, 0x1d, 0xcc, 0xcf, 0x6b, 0x82, 0xd3, 0xd4, 0x2f, 0xcd, 0xc6,
	0xac, 0xf2, 0x7f, 0xc0, 0x9f, 0x4e, 0xe8, 0x23, 0xcd, 0xf2, 0xa8, 0x8c, 0xeb, 0x81, 0x36, 0x89,
	0x7f, 0x96, 0xc7, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xa2, 0x73, 0xfb, 0xb5, 0x01, 0x00,
	0x00,
}
